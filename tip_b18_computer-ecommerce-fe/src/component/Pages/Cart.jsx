import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Container, Row, Col, Form, Button, Image, InputGroup } from "react-bootstrap";

const initialCart = [
  {
    id: 1,
    name: "PC GVN AMD R5-8400F/ VGA RX 7600 (Powered by ASUS)",
    price: 23390000,
    oldPrice: 25210000,
    image: "/public/image-2.png",
    quantity: 1,
    selected: false, // M·∫∑c ƒë·ªãnh s·∫£n ph·∫©m n√†y ch∆∞a ƒë∆∞·ª£c ch·ªçn
  },
  {
    id: 2,
    name: "PC GVN Intel i3-12100F/ VGA RX 6500XT (Powered by ASUS)",
    price: 23390000,
    oldPrice: 25210000,
    image: "/public/image-1.png",
    quantity: 1,
    selected: false, 
  },
];

const CartPage = () => {
  const [cart, setCart] = useState(initialCart);
  const [customer, setCustomer] = useState({ name: "", phone: "", address: "" });
  const navigate = useNavigate();

  // H√†m x·ª≠ l√Ω thay ƒë·ªïi s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè
  const handleQuantityChange = (id, delta) => {
    setCart(
      cart.map((item) =>
        item.id === id
          ? { ...item, quantity: Math.max(1, item.quantity + delta) } // ƒê·∫£m b·∫£o s·ªë l∆∞·ª£ng kh√¥ng nh·ªè h∆°n 1
          : item
      )
    );
  };

  // H√†m x·ª≠ l√Ω vi·ªác ch·ªçn ho·∫∑c b·ªè ch·ªçn s·∫£n ph·∫©m
  const handleSelectItem = (id) => {
    setCart(
      cart.map((item) =>
        item.id === id ? { ...item, selected: !item.selected } : item
      )
    );
  };

  // H√†m x·ª≠ l√Ω x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
  const handleRemoveItem = (id) => {
    setCart(cart.filter((item) => item.id !== id));
  };

  // H√†m ch·ªçn ho·∫∑c b·ªè ch·ªçn t·∫•t c·∫£ s·∫£n ph·∫©m trong gi·ªè
  const handleSelectAll = (checked) => {
    setCart(cart.map((item) => ({ ...item, selected: checked })));
  };

  // T√≠nh t·ªïng ti·ªÅn c·ªßa gi·ªè h√†ng (ch·ªâ t√≠nh c√°c s·∫£n ph·∫©m ƒë√£ ch·ªçn)
  const total = cart
    .filter((item) => item.selected) // l·ªçc sp ƒë∆∞·ª£c ch·ªçn
    .reduce((sum, item) => sum + item.price * item.quantity, 0); // t·ªïng ti·ªÅn

    const handleBuy = () => {
            navigate('/HomePage');
    };

  return (
    <Container className="py-5">
      <Row>
        <Col md={8}>
          <h5> Xem th√™m s·∫£n ph·∫©m kh√°c</h5>
          {/* Checkbox ch·ªçn t·∫•t c·∫£ */}
          <Form.Check
            type="checkbox"
            label="Ch·ªçn t·∫•t c·∫£"
            className="my-3"
            onChange={(e) => handleSelectAll(e.target.checked)} // G·ªçi h√†m ch·ªçn t·∫•t c·∫£ khi checkbox thay ƒë·ªïi
          />
          {/* Duy·ªát qua t·∫•t c·∫£ s·∫£n ph·∫©m trong gi·ªè */}
          {cart.map((item) => (
            <Row key={item.id} className="align-items-center border-top py-3">
              <Col xs={1}>
                {/* Checkbox ch·ªçn s·∫£n ph·∫©m */}
                <Form.Check
                  type="checkbox"
                  checked={item.selected}
                  onChange={() => handleSelectItem(item.id)} // X·ª≠ l√Ω khi checkbox thay ƒë·ªïi
                />
              </Col>
              <Col xs={2}>
                {/* H√¨nh ·∫£nh s·∫£n ph·∫©m */}
                <Image src={item.image} thumbnail />
              </Col>
              <Col xs={5}>{item.name}</Col>
              <Col xs={2}>
                {/* Gi√° s·∫£n ph·∫©m v√† gi√° c≈© */}
                <div className="text-danger fw-bold">{item.price.toLocaleString()}‚Ç´</div>
                <div>
                  <del>{item.oldPrice.toLocaleString()}‚Ç´</del> -7%
                </div>
              </Col>
              <Col xs={1}>
                {/* ƒêi·ªÅu ch·ªânh s·ªë l∆∞·ª£ng s·∫£n ph·∫©m */}
                <InputGroup size="sm">
                  <Button
                    variant="outline-secondary"
                    onClick={() => handleQuantityChange(item.id, -1)} // Gi·∫£m s·ªë l∆∞·ª£ng
                  >
                    -
                  </Button>
                  <Form.Control
                    value={item.quantity}
                    readOnly
                    style={{ width: "40px", textAlign: "center" }}
                  />
                  <Button
                    variant="outline-secondary"
                    onClick={() => handleQuantityChange(item.id, 1)} // TƒÉng s·ªë l∆∞·ª£ng
                  >
                    +
                  </Button>
                </InputGroup>
              </Col>
              <Col xs={1}>
                {/* N√∫t x√≥a s·∫£n ph·∫©m */}
                <Button
                  variant="link"
                  className="text-danger"
                  onClick={() => handleRemoveItem(item.id)} // X·ª≠ l√Ω khi x√≥a s·∫£n ph·∫©m
                >
                  üóë
                </Button>
              </Col>
            </Row>
          ))}
        </Col>

        <Col md={4} className="border p-3">
          <h6>Th√¥ng tin kh√°ch h√†ng</h6>
          {/* C√°c tr∆∞·ªùng nh·∫≠p li·ªáu th√¥ng tin kh√°ch h√†ng */}
          <Form.Control
            placeholder="T√™n Kh√°ch H√†ng"
            className="mb-2"
            onChange={(e) => setCustomer({ ...customer, name: e.target.value })} // C·∫≠p nh·∫≠t t√™n kh√°ch h√†ng
          />
          <Form.Control
            placeholder="S·ªë ƒêi·ªán Tho·∫°i"
            className="mb-2"
            onChange={(e) => setCustomer({ ...customer, phone: e.target.value })} // C·∫≠p nh·∫≠t s·ªë ƒëi·ªán tho·∫°i
          />
          <Form.Control
            as="textarea"
            rows={2}
            placeholder="ƒê·ªãa Ch·ªâ Nh·∫≠n H√†ng"
            className="mb-3"
            onChange={(e) => setCustomer({ ...customer, address: e.target.value })} // C·∫≠p nh·∫≠t ƒë·ªãa ch·ªâ
          />

          <h6>Th√¥ng Tin ƒê∆°n H√†ng</h6>
          <p>Ph√≠ V·∫≠n Chuy·ªÉn: Mi·ªÖn Ph√≠</p>
          <p>T·ªïng Ti·ªÅn: {total.toLocaleString()}‚Ç´</p> {/* Hi·ªÉn th·ªã t·ªïng ti·ªÅn */}
          <Button variant="danger" className="w-100" onClick={handleBuy}>
            Thanh To√°n
          </Button>
        </Col>
      </Row>
    </Container>
  );
};

export default CartPage;
